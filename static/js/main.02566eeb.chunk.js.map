{"version":3,"sources":["fire.js","Login.js","TinderCards.js","SwipeButtons.js","binderlogo.jpg","Header.js","Leaderboard.js","Hero.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","useStylesInputs","makeStyles","theme","root","margin","spacing","width","Login","props","classes","email","setEmail","password","setpassword","handleLogin","hasAccount","setHasAccount","emailError","passwordError","handleSignUp","className","noValidate","autoComplete","TextField","label","variant","value","onChange","e","target","classname","type","Button","color","component","onClick","hidden","TinderCards","imageList","swiped","setImageList","getList","getImages","map","person","preventSwipe","onSwipe","dir","style","backgroundImage","img","name","SwipeButtons","IconButton","fontSize","Header","handleLogout","setPages","pages","changePage","src","binderlogo","alt","Leaderboard","top","i","length","image","push","curr","pop","right","index","Hero","setList","user","list","handleUpload","fileChange","useState","fire","firestore","collection","onSnapshot","querySnapshot","items","forEach","doc","data","useEffect","direction","imgRef","left","set","console","log","App","setUser","setPassword","setEmailError","setPasswordError","setImage","ref","clearErrors","authListener","auth","onAuthStateChanged","obj","id","uid","includes","signOut","put","on","snapshot","error","child","getDownloadURL","then","url","files","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02566eeb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDbxkcg3qcbedw2gmdPnUnyxFxB5NgaNns\",\r\n    authDomain: \"socialape-f4e77.firebaseapp.com\",\r\n    projectId: \"socialape-f4e77\",\r\n    storageBucket: \"socialape-f4e77.appspot.com\",\r\n    messagingSenderId: \"375526920200\",\r\n    appId: \"1:375526920200:web:13d3fe8308b3e9a8fc41bd\",\r\n    measurementId: \"G-03JLZGQDXD\"\r\n  });\r\n\r\n  const storage = firebase.storage();\r\n\r\n  export {storage, app as default};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStylesInputs = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '95%',\r\n      },\r\n    },\r\n}));\r\n\r\nconst useStylesButtons = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n\r\n    const classes = useStylesInputs();\r\n\r\n    const{email,setEmail,password,setpassword,handleLogin,hasAccount,setHasAccount,emailError,passwordError,handleSignUp} = props;\r\n    return(\r\n        <section className=\"login\">\r\n\r\n            <div className=\"loginContainer\">\r\n\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField className=\"outlined-basic\" label=\"Username\" variant=\"outlined\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n\r\n                    <p classname=\"errorMsg\">{emailError}</p>\r\n\r\n                    <TextField className=\"outlined-basic\" label=\"Password\" type=\"password\" variant=\"outlined\" value={password} onChange={e => setpassword(e.target.value)}/>\r\n\r\n                    <p className=\"errorMsg\">{passwordError}</p>\r\n                </form>\r\n                \r\n\r\n                <div className=\"btnContainer\">\r\n\r\n\r\n                    {hasAccount ? (\r\n                        <>\r\n\r\n                            <Button \r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                component=\"label\"\r\n                                className=\"SignInUp\"\r\n                            >   \r\n                                Sign In\r\n                                <button className=\"loginButton\" onClick={handleLogin} hidden>Sign in</button>\r\n                            </Button>\r\n                        \r\n\r\n                        <p>Don't have an account ? <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span></p>\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                        <Button \r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            component=\"label\"\r\n                            className=\"SignInUp\"\r\n                            \r\n                        >  Sign Up\r\n                            <button  className=\"loginButton\" onClick={handleSignUp} hidden>Sign up</button>\r\n                        </Button>\r\n                        <p>Have an account ? <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span></p>\r\n                        </>\r\n                    )}\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport './TinderCards.css';\r\n\r\nfunction TinderCards({imageList, setImageList, getList, getImages, swiped}){\r\n\r\n    return(\r\n        <div className>\r\n\r\n            <div className=\"tinderCards__cardContainer\">\r\n                {imageList.map((person) => (\r\n                    // <TinderCard ref={image} className='swipe' key={image.img} onSwipe={(dir) => swiped(dir, image.img)} onCardLeftScreen={() => outOfFrame(image.img)}>\r\n                    <TinderCard\r\n                        className= \"swipe\"\r\n                        key={person.img}\r\n                        preventSwipe={[\"up\", \"down\"]}\r\n                        onSwipe={(dir) => swiped(dir, person)}\r\n                    >\r\n                        <div \r\n                            style={{ backgroundImage: `url(${person.img})` }}\r\n                            className = \"card\"\r\n                        >\r\n                            <h3>{person.name}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards","import React from 'react';\r\nimport \"./SwipeButtons.css\";\r\n\r\nimport ReplayIcon from \"@material-ui/icons/Replay\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\"\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\"\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nfunction SwipeButtons(){\r\n    return(\r\n        <div className = \"swipeButtons\">\r\n            \r\n            <IconButton className=\"swipeButtons__left\">\r\n                <CloseIcon fontSize = \"large\" />\r\n            </IconButton>\r\n            \r\n            <IconButton className=\"swipeButtons__star\">\r\n                <StarRateIcon fontSize = \"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__right\">\r\n                <FavoriteIcon fontSize = \"large\" />\r\n            </IconButton>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n\r\n{/* <IconButton className=\"swipeButtons__repeat\">\r\n                <ReplayIcon fontSize = \"large\" />\r\n            </IconButton>\r\n\r\n<IconButton className=\"swipeButtons__lightning\">\r\n<FlashOnIcon fontSize = \"large\" />\r\n</IconButton> */}","export default __webpack_public_path__ + \"static/media/binderlogo.b3c55963.jpg\";","import React from 'react';\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport binderlogo from'./binderlogo.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\r\n\r\nfunction Header({handleLogout, setPages, pages}){\r\n\r\n    function changePage(){\r\n        if(pages==\"Settings\"){\r\n            setPages('');\r\n        }else{\r\n            setPages(\"Settings\");\r\n        }\r\n    }\r\n\r\n    function leaderboard(){\r\n        if(pages == \"Leaderboard\"){\r\n            setPages('');\r\n        }else{\r\n            setPages('Leaderboard');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"header\">\r\n     \r\n            <IconButton className=\"header__icon\" onClick={handleLogout}>\r\n                <ExitToAppIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n\r\n            <IconButton className=\"header__icon\" onClick={leaderboard}>\r\n                <img className =\"header__logo\" src={binderlogo} alt=\"logo\" />\r\n            </IconButton>\r\n            \r\n\r\n            {pages==\"Settings\" ? (\r\n                <>\r\n                    <IconButton className=\"header__icon\" onClick={changePage}>\r\n                        <ArrowBackIosIcon  fontSize=\"large\"/>\r\n                    </IconButton>\r\n                </>\r\n            ):(\r\n                <>\r\n                    <IconButton className=\"header__icon\" onClick={changePage}>\r\n                        <SettingsApplicationsIcon  fontSize=\"large\"/>\r\n                    </IconButton>\r\n                </>\r\n            )}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\n\r\nconst Leaderboard = ({imageList}) => {\r\n    let top = [];\r\n\r\n\r\n    for(let i=0; i < imageList.length; i++){\r\n        let image = imageList[i];\r\n\r\n            if(top.length < 10){\r\n                top.push(image);\r\n            }else{\r\n                if(top.length > 0){\r\n                    let curr = top.pop();\r\n                    if(curr.right <= image.right){\r\n                        top.push(image);\r\n                        if(top.length <= 10){\r\n                            top.push(curr);\r\n                        }\r\n                    }else{\r\n                        top.push(curr);\r\n                    }\r\n                }\r\n            }\r\n            \r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {top.map( (person, index) => (\r\n            <div\r\n                key={index}\r\n                style={{ backgroundImage: `url(${person.img})` }}\r\n                className = \"leader\"\r\n            >\r\n                <h2>{index+1}</h2>\r\n            </div>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Leaderboard;","\r\nimport React, {useEffect, useState, useMemo} from 'react';\r\nimport fire from\"./fire\";\r\n\r\nimport TinderCard from 'react-tinder-card';\r\nimport './Tinder.css';\r\nimport TinderCards from './TinderCards';\r\nimport SwipeButtons from './SwipeButtons';\r\nimport Header from './Header';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Leaderboard from'./Leaderboard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nconst Hero = ({ handleLogout, user, list, setList, handleUpload, fileChange, setPages, pages }) => {\r\n    \r\n    const [imageList, setImageList] = useState([]);\r\n\r\n    function getList(){\r\n        const ref = fire.firestore().collection(\"usersList\");\r\n        ref.onSnapshot( (querySnapshot) => {\r\n            const items= [];\r\n            querySnapshot.forEach( (doc) => {\r\n                items.push(doc.data());\r\n            });\r\n            setList(items);\r\n        });\r\n    }\r\n    \r\n    function getImages(){\r\n        const imageRef = fire.firestore().collection(\"images\");\r\n        imageRef.onSnapshot( (querySnapshot) => {\r\n            const items= [];\r\n            querySnapshot.forEach( (doc) => {\r\n                items.push(doc.data());\r\n            });\r\n            setImageList(items);\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        //getList();\r\n        getImages();\r\n    }, []);\r\n\r\n\r\n    //const [characters, setCharacters] = useState(imageList)\r\n    //const [lastDirection, setLastDirection] = useState()\r\n\r\n\r\n    const swiped = (direction, person) => {\r\n\r\n        const imgRef = fire.firestore().collection(\"images\");\r\n\r\n        if(direction == \"right\") person.right = person.right+1;\r\n        else person.left = person.left+1;\r\n\r\n        imgRef.doc(person.user).set({img: person.img, right: person.right, left: person.left, user: person.user});\r\n\r\n        console.log(person.user);\r\n        console.log(direction);\r\n        // setLastDirection(direction)\r\n        // alreadyRemoved.push(nameToDelete)\r\n    }\r\n\r\n    const outOfFrame = (name) => {\r\n        // console.log(name + ' left the screen!')\r\n        // charactersState = charactersState.filter(character => character.name !== name)\r\n        // setCharacters(charactersState)\r\n    }\r\n\r\n\r\n\r\n    // const swipe = (dir) => {\r\n    //     const cardsLeft = characters.filter(person => !alreadyRemoved.includes(person.name))\r\n    //     if (cardsLeft.length) {\r\n    //       const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\r\n    //       const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\r\n    //       alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n    //       childRefs[index].current.swipe(dir) // Swipe the card!\r\n    //     }\r\n    //   }\r\n\r\n\r\n    return(\r\n        <>\r\n            \r\n            {(pages==\"Settings\") ? (\r\n                <>\r\n                    <Header handleLogout={handleLogout} setPages={setPages} pages={pages}/>\r\n\r\n                    <section>\r\n\r\n                        <div className=\"upload\">\r\n\r\n                            <Button \r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                component=\"label\"\r\n                            >\r\n                                Select a File\r\n                                <input type=\"file\" onChange={fileChange} hidden/>\r\n                            </Button>\r\n                        \r\n                            <Button \r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                component=\"label\"\r\n                            >   \r\n                                UPLOAD\r\n                                <button onClick={handleUpload} hidden>UPLOAD</button>\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </section>\r\n                </>\r\n            ):(\r\n                (pages==\"Leaderboard\") ? (\r\n                    <>\r\n                        <Header handleLogout={handleLogout} setPages={setPages} pages={pages}/>\r\n                        <Leaderboard imageList={imageList}/>\r\n                    </>\r\n                ):(\r\n                    <>\r\n                    <Header handleLogout={handleLogout} setPages={setPages} pages={pages}/>\r\n                    <TinderCards imageList={imageList} setImageList={setImageList} getList={getList} getImages={getImages} swiped={swiped}/>\r\n                    <SwipeButtons/>\r\n                    </>\r\n                )\r\n                \r\n            )}\r\n\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Hero;\r\n\r\n//{imageList.map((image) =>\r\n{/* <TinderCard ref={image} className='swipe' key={image.img} onSwipe={(dir) => swiped(dir, image.img)} onCardLeftScreen={() => outOfFrame(image.img)}>\r\n<div style={{ backgroundImage: 'url(' + image.img + ')' }} className='card'>\r\n    <h3>NAME</h3>\r\n</div>\r\n</TinderCard>\r\n)} */}\r\n\r\n\r\n\r\n\r\n{/* <section className =\"hero\">\r\n            <nav>\r\n                <h2>Welcome</h2>\r\n                <button onClick={handleLogout}>Log out</button>\r\n                \r\n            </nav>\r\n\r\n            <div className=\"upload\">\r\n                <input type=\"file\" onChange={fileChange} />\r\n                <button onClick={handleUpload}>UPLOAD</button>\r\n            </div>\r\n</section> */}","import React, {useState, useEffect } from \"react\";\nimport fire from './fire';\nimport {storage} from'./fire';\nimport './App.css';\nimport Login from './Login';\nimport Hero from './Hero';\nimport Settings from './Settings';\n\nfunction App() {\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n  const [list, setList] = useState([]);\n  const [image, setImage] = useState(null);\n  const [pages, setPages] = useState('');\n\n  const ref = fire.firestore().collection(\"usersList\");\n  const imgRef = fire.firestore().collection(\"images\");\n  //db.collection(\"cities\").doc(\"new-city-id\").set(data);\n    \n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${user.uid}/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {},\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(`images/${user.uid}/`)\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            imgRef.doc(user.uid).set({img: url, right: 0, left: 0, user: user.uid});\n          });\n      }\n    )\n  }\n\n  const fileChange = e => {\n    if(e.target.files[0]){\n      setImage(e.target.files[0]);\n    }\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    setPages('');\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  }\n\n  const handleSignUp = () => {\n    setPages('');\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch(err.code){\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  }\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n    setPages('');\n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user =>{\n      if(user){\n        clearInputs();\n        setUser(user);\n        ///////////////////////////////////// lol this works\n        let obj = {id:user.uid, email:user.email};\n        if(!list.includes(obj)){\n          ref.doc(user.uid).set({id:user.uid, email:user.email});\n        }\n        ///////////////////////////////////// lol this works\n\n      }else{\n        setUser('');\n      }\n    });\n  }\n\n  useEffect(() => {\n    authListener();\n  }, [])\n\n  // if(user && pages==\"Settings\"){\n  //   return(\n  //     <>\n  //     <Settings handleLogout={handleLogout} fileChange={fileChange} handleUpload={handleUpload}/>\n  //     </>\n  //   )\n  // }\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Hero \n          handleLogout={handleLogout} \n          user={user} \n          list={list} \n          setList={setList} \n          handleUpload={handleUpload} \n          fileChange={fileChange}\n          setPages={setPages}\n          pages={pages}\n        />\n      ):(\n      \n      \n        <Login \n          email={email} \n          setEmail={setEmail} \n          password={password} \n          setpassword={setPassword} \n          handleLogin={handleLogin}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n          handleSignUp={handleSignUp}\n        />\n      \n      \n      )}\n\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n// {user ? (\n        \n//   <Hero \n//     handleLogout={handleLogout} \n//     user={user} \n//     list={list} \n//     setList={setList} \n//     handleUpload={handleUpload} \n//     fileChange={fileChange}\n//   />\n\n\n// ):(\n\n\n//   <Login \n//     email={email} \n//     setEmail={setEmail} \n//     password={password} \n//     setpassword={setPassword} \n//     handleLogin={handleLogin}\n//     hasAccount={hasAccount}\n//     setHasAccount={setHasAccount}\n//     emailError={emailError}\n//     passwordError={passwordError}\n//     handleSignUp={handleSignUp}\n//   />\n\n\n// )}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}